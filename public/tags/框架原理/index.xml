<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>框架原理 on ruihusky&#39;s Blog</title>
    <link>https://ruihusky.github.io/ruihusky/tags/%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in 框架原理 on ruihusky&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>ruihusky&#39;s Blog</copyright>
    <lastBuildDate>Sun, 20 Jun 2021 20:00:00 +0800</lastBuildDate><atom:link href="https://ruihusky.github.io/ruihusky/tags/%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Hooks 原理简析</title>
      <link>https://ruihusky.github.io/ruihusky/posts/2021-06-20_react-hooks/</link>
      <pubDate>Sun, 20 Jun 2021 20:00:00 +0800</pubDate>
      
      <guid>https://ruihusky.github.io/ruihusky/posts/2021-06-20_react-hooks/</guid>
      <description>说明 本文的原理简析基于 React 17.0.2 和 Legacy Mode ，不涉及 Concurrent Mode 。
函数组件与类组件 想要理解 Hooks，需要先理解函数组件与类组件之间的区别。
先看概括 React 设计理念的公式：
1  UI = render(data)   React 根据状态渲染视图，且一个状态对应一个渲染结果。也就是说，数据是和渲染结果绑定的。
类组件与可变的 this 在 React 中，推荐使用不可变数据 (immutable data) 描述状态。需要更新状态时，应使用一份新的数据，而不是对原来的数据进行修改。
不过就算使用不可变数据，类组件中还是会有this的问题。先看一个类组件示例：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  /** 假设这里是某个用户的个人信息页 点击 Follow 将会关注该用户，关注成功后需要弹出消息，提示关注成功 通过 setTimeout 模拟了一个响应较慢的接口 */ class ProfilePage extends React.Component { showMessage = () =&amp;gt; { alert(&amp;#39;Followed &amp;#39; + this.</description>
    </item>
    
  </channel>
</rss>
